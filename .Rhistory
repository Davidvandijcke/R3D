LowerCB   = round(out_hetero$boot_out$cb_lower, 2),
UpperCB   = round(out_hetero$boot_out$cb_upper, 2)
)
print(head(res_hetero, 10))
cat("...\n")
cat("Homogeneity test p-value:", out_hetero$boot_out$p_value, "\n")
cat("(Should be < 0.05 since effect varies by quantile.)\n\n")
#---------------------------------------------------------------------------
# Quick Plots
#---------------------------------------------------------------------------
par(mfrow=c(1,2))
# Plot 1: Constant effect
plot(out_constant, main="Constant Treatment Effect (Frechet)",
col="blue", lwd=2)
abline(h=test_data$true_effect, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "True (2)"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
# Plot 2: Heterogeneous effect
plot(out_hetero, main="Heterogeneous Treatment Effect (Frechet)",
col="blue", lwd=2)
lines(q_grid, expected_hetero, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "Approx. True"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
par(mfrow=c(1,1))
devtools::load_all()
set.seed(777)
#---------------------------------------------------------------------------
# 1) CONSTANT-EFFECT DATA
#---------------------------------------------------------------------------
test_data <- create_test_data(n = 500)
# We want a 100-point grid
q_grid <- seq(0.1, 0.9, by=0.01)
# r3d with Frechet approach
out_constant <- r3d(
X        = test_data$x,
Y_list   = test_data$y_list,
cutoff   = 0,
method   = "frechet",
p        = 2,
s        = 1,
q_grid   = q_grid,
boot     = TRUE,
boot_reps= 50,
test     = "homogeneity"
)
# We know the true effect is exactly 2 at all quantiles:
expected_constant <- rep(test_data$true_effect, length(q_grid))
#---------------------------------------------------------------------------
# 2) HETEROGENEOUS-EFFECT DATA
#---------------------------------------------------------------------------
hetero_data <- create_hetero_effect_data(n = 500)
# We have the same q_grid = seq(0.01, 0.99, 0.01).
# We'll compare our estimate to hetero_data$true_effects, which is named for 0.01..0.99
out_hetero <- r3d(
X         = hetero_data$x,
Y_list    = hetero_data$y_list,
cutoff    = 0,
method    = "frechet",
p         = 2,
s         = 1,
q_grid    = q_grid,
boot      = TRUE,
boot_reps = 50,
test      = "homogeneity"
)
# Now for each q in q_grid, we'll see the difference we expect from the big replicate
# stored in hetero_data$true_effects (which is a named vector).
# If any exact matching fails because of floating float in names, we can do:
q_strs <- sprintf("%.2f", q_grid) # character
expected_hetero <- as.numeric(hetero_data$true_effects[q_strs])
#---------------------------------------------------------------------------
# Print results for manual checking
#---------------------------------------------------------------------------
cat("\n\n==== VISUAL VALIDATION ====\n\n")
# (A) Constant Effect
cat("CONSTANT EFFECT MODEL:\n")
cat("The effect is exactly:", test_data$true_effect, "for all q.\n\n")
res_const <- data.frame(
Quantile  = q_grid,
Estimated = round(out_constant$tau, 2),
Expected  = round(expected_constant, 2),
Bias      = round(out_constant$tau - expected_constant, 2),
LowerCB   = round(out_constant$boot_out$cb_lower, 2),
UpperCB   = round(out_constant$boot_out$cb_upper, 2)
)
print(head(res_const, 10))   # Print just the first few lines
cat("...\n")
cat("Homogeneity test p-value:", out_constant$boot_out$p_value, "\n")
cat("(Should be > 0.05 if effect is truly constant.)\n\n")
# (B) Heterogeneous Effect
cat("HETEROGENEOUS EFFECT MODEL:\n")
cat("(We used a big replicate to approximate these differences)\n\n")
res_hetero <- data.frame(
Quantile  = q_grid,
Estimated = round(out_hetero$tau, 2),
Expected  = round(expected_hetero, 2),
Bias      = round(out_hetero$tau - expected_hetero, 2),
LowerCB   = round(out_hetero$boot_out$cb_lower, 2),
UpperCB   = round(out_hetero$boot_out$cb_upper, 2)
)
print(head(res_hetero, 10))
cat("...\n")
cat("Homogeneity test p-value:", out_hetero$boot_out$p_value, "\n")
cat("(Should be < 0.05 since effect varies by quantile.)\n\n")
#---------------------------------------------------------------------------
# Quick Plots
#---------------------------------------------------------------------------
par(mfrow=c(1,2))
# Plot 1: Constant effect
plot(out_constant, main="Constant Treatment Effect (Frechet)",
col="blue", lwd=2)
abline(h=test_data$true_effect, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "True (2)"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
# Plot 2: Heterogeneous effect
plot(out_hetero, main="Heterogeneous Treatment Effect (Frechet)",
col="blue", lwd=2)
lines(q_grid, expected_hetero, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "Approx. True"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
par(mfrow=c(1,1))
set.seed(777)
#---------------------------------------------------------------------------
# 1) CONSTANT-EFFECT DATA
#---------------------------------------------------------------------------
test_data <- create_test_data(n = 500)
# We want a 100-point grid
q_grid <- seq(0.1, 0.9, by=0.01)
# r3d with Frechet approach
out_constant <- r3d(
X        = test_data$x,
Y_list   = test_data$y_list,
cutoff   = 0,
method   = "frechet",
p        = 2,
s        = 1,
q_grid   = q_grid,
boot     = TRUE,
boot_reps= 300,
test     = "homogeneity"
)
# We know the true effect is exactly 2 at all quantiles:
expected_constant <- rep(test_data$true_effect, length(q_grid))
#---------------------------------------------------------------------------
# 2) HETEROGENEOUS-EFFECT DATA
#---------------------------------------------------------------------------
hetero_data <- create_hetero_effect_data(n = 500)
# We have the same q_grid = seq(0.01, 0.99, 0.01).
# We'll compare our estimate to hetero_data$true_effects, which is named for 0.01..0.99
out_hetero <- r3d(
X         = hetero_data$x,
Y_list    = hetero_data$y_list,
cutoff    = 0,
method    = "frechet",
p         = 2,
s         = 1,
q_grid    = q_grid,
boot      = TRUE,
boot_reps = 300,
test      = "homogeneity"
)
# Now for each q in q_grid, we'll see the difference we expect from the big replicate
# stored in hetero_data$true_effects (which is a named vector).
# If any exact matching fails because of floating float in names, we can do:
q_strs <- sprintf("%.2f", q_grid) # character
expected_hetero <- as.numeric(hetero_data$true_effects[q_strs])
#---------------------------------------------------------------------------
# Print results for manual checking
#---------------------------------------------------------------------------
cat("\n\n==== VISUAL VALIDATION ====\n\n")
# (A) Constant Effect
cat("CONSTANT EFFECT MODEL:\n")
cat("The effect is exactly:", test_data$true_effect, "for all q.\n\n")
res_const <- data.frame(
Quantile  = q_grid,
Estimated = round(out_constant$tau, 2),
Expected  = round(expected_constant, 2),
Bias      = round(out_constant$tau - expected_constant, 2),
LowerCB   = round(out_constant$boot_out$cb_lower, 2),
UpperCB   = round(out_constant$boot_out$cb_upper, 2)
)
print(head(res_const, 10))   # Print just the first few lines
cat("...\n")
cat("Homogeneity test p-value:", out_constant$boot_out$p_value, "\n")
cat("(Should be > 0.05 if effect is truly constant.)\n\n")
# (B) Heterogeneous Effect
cat("HETEROGENEOUS EFFECT MODEL:\n")
cat("(We used a big replicate to approximate these differences)\n\n")
res_hetero <- data.frame(
Quantile  = q_grid,
Estimated = round(out_hetero$tau, 2),
Expected  = round(expected_hetero, 2),
Bias      = round(out_hetero$tau - expected_hetero, 2),
LowerCB   = round(out_hetero$boot_out$cb_lower, 2),
UpperCB   = round(out_hetero$boot_out$cb_upper, 2)
)
print(head(res_hetero, 10))
cat("...\n")
cat("Homogeneity test p-value:", out_hetero$boot_out$p_value, "\n")
cat("(Should be < 0.05 since effect varies by quantile.)\n\n")
#---------------------------------------------------------------------------
# Quick Plots
#---------------------------------------------------------------------------
par(mfrow=c(1,2))
# Plot 1: Constant effect
plot(out_constant, main="Constant Treatment Effect (Frechet)",
col="blue", lwd=2)
abline(h=test_data$true_effect, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "True (2)"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
# Plot 2: Heterogeneous effect
plot(out_hetero, main="Heterogeneous Treatment Effect (Frechet)",
col="blue", lwd=2)
lines(q_grid, expected_hetero, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "Approx. True"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
par(mfrow=c(1,1))
test_data <- create_test_data(n = 500)
# We want a 100-point grid
q_grid <- seq(0.1, 0.9, by=0.01)
# r3d with Frechet approach
out_constant <- r3d(
X        = test_data$x,
Y_list   = test_data$y_list,
cutoff   = 0,
method   = "frechet",
p        = 2,
s        = 1,
q_grid   = q_grid,
boot     = TRUE,
boot_reps= 500,
test     = "homogeneity"
)
# We know the true effect is exactly 2 at all quantiles:
expected_constant <- rep(test_data$true_effect, length(q_grid))
#---------------------------------------------------------------------------
# 2) HETEROGENEOUS-EFFECT DATA
#---------------------------------------------------------------------------
hetero_data <- create_hetero_effect_data(n = 500)
# We have the same q_grid = seq(0.01, 0.99, 0.01).
# We'll compare our estimate to hetero_data$true_effects, which is named for 0.01..0.99
out_hetero <- r3d(
X         = hetero_data$x,
Y_list    = hetero_data$y_list,
cutoff    = 0,
method    = "frechet",
p         = 2,
s         = 1,
q_grid    = q_grid,
boot      = TRUE,
boot_reps = 500,
test      = "homogeneity"
)
# Now for each q in q_grid, we'll see the difference we expect from the big replicate
# stored in hetero_data$true_effects (which is a named vector).
# If any exact matching fails because of floating float in names, we can do:
q_strs <- sprintf("%.2f", q_grid) # character
expected_hetero <- as.numeric(hetero_data$true_effects[q_strs])
#---------------------------------------------------------------------------
# Print results for manual checking
#---------------------------------------------------------------------------
cat("\n\n==== VISUAL VALIDATION ====\n\n")
# (A) Constant Effect
cat("CONSTANT EFFECT MODEL:\n")
cat("The effect is exactly:", test_data$true_effect, "for all q.\n\n")
res_const <- data.frame(
Quantile  = q_grid,
Estimated = round(out_constant$tau, 2),
Expected  = round(expected_constant, 2),
Bias      = round(out_constant$tau - expected_constant, 2),
LowerCB   = round(out_constant$boot_out$cb_lower, 2),
UpperCB   = round(out_constant$boot_out$cb_upper, 2)
)
print(head(res_const, 10))   # Print just the first few lines
cat("...\n")
cat("Homogeneity test p-value:", out_constant$boot_out$p_value, "\n")
cat("(Should be > 0.05 if effect is truly constant.)\n\n")
# (B) Heterogeneous Effect
cat("HETEROGENEOUS EFFECT MODEL:\n")
cat("(We used a big replicate to approximate these differences)\n\n")
res_hetero <- data.frame(
Quantile  = q_grid,
Estimated = round(out_hetero$tau, 2),
Expected  = round(expected_hetero, 2),
Bias      = round(out_hetero$tau - expected_hetero, 2),
LowerCB   = round(out_hetero$boot_out$cb_lower, 2),
UpperCB   = round(out_hetero$boot_out$cb_upper, 2)
)
print(head(res_hetero, 10))
cat("...\n")
cat("Homogeneity test p-value:", out_hetero$boot_out$p_value, "\n")
cat("(Should be < 0.05 since effect varies by quantile.)\n\n")
#---------------------------------------------------------------------------
# Quick Plots
#---------------------------------------------------------------------------
par(mfrow=c(1,2))
# Plot 1: Constant effect
plot(out_constant, main="Constant Treatment Effect (Frechet)",
col="blue", lwd=2)
abline(h=test_data$true_effect, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "True (2)"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
# Plot 2: Heterogeneous effect
plot(out_hetero, main="Heterogeneous Treatment Effect (Frechet)",
col="blue", lwd=2)
lines(q_grid, expected_hetero, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "Approx. True"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
par(mfrow=c(1,1))
devtools::load_all()
test_data <- create_test_data(n = 500)
# We want a 100-point grid
q_grid <- seq(0.1, 0.9, by=0.01)
# r3d with Frechet approach
out_constant <- r3d(
X        = test_data$x,
Y_list   = test_data$y_list,
cutoff   = 0,
method   = "frechet",
p        = 2,
s        = 1,
q_grid   = q_grid,
boot     = TRUE,
boot_reps= 500,
test     = "homogeneity"
)
# We know the true effect is exactly 2 at all quantiles:
expected_constant <- rep(test_data$true_effect, length(q_grid))
#---------------------------------------------------------------------------
# 2) HETEROGENEOUS-EFFECT DATA
#---------------------------------------------------------------------------
hetero_data <- create_hetero_effect_data(n = 500)
# We have the same q_grid = seq(0.01, 0.99, 0.01).
# We'll compare our estimate to hetero_data$true_effects, which is named for 0.01..0.99
out_hetero <- r3d(
X         = hetero_data$x,
Y_list    = hetero_data$y_list,
cutoff    = 0,
method    = "frechet",
p         = 2,
s         = 1,
q_grid    = q_grid,
boot      = TRUE,
boot_reps = 500,
test      = "homogeneity"
)
# Now for each q in q_grid, we'll see the difference we expect from the big replicate
# stored in hetero_data$true_effects (which is a named vector).
# If any exact matching fails because of floating float in names, we can do:
q_strs <- sprintf("%.2f", q_grid) # character
expected_hetero <- as.numeric(hetero_data$true_effects[q_strs])
#---------------------------------------------------------------------------
# Print results for manual checking
#---------------------------------------------------------------------------
cat("\n\n==== VISUAL VALIDATION ====\n\n")
# (A) Constant Effect
cat("CONSTANT EFFECT MODEL:\n")
cat("The effect is exactly:", test_data$true_effect, "for all q.\n\n")
res_const <- data.frame(
Quantile  = q_grid,
Estimated = round(out_constant$tau, 2),
Expected  = round(expected_constant, 2),
Bias      = round(out_constant$tau - expected_constant, 2),
LowerCB   = round(out_constant$boot_out$cb_lower, 2),
UpperCB   = round(out_constant$boot_out$cb_upper, 2)
)
print(head(res_const, 10))   # Print just the first few lines
cat("...\n")
cat("Homogeneity test p-value:", out_constant$boot_out$p_value, "\n")
cat("(Should be > 0.05 if effect is truly constant.)\n\n")
# (B) Heterogeneous Effect
cat("HETEROGENEOUS EFFECT MODEL:\n")
cat("(We used a big replicate to approximate these differences)\n\n")
res_hetero <- data.frame(
Quantile  = q_grid,
Estimated = round(out_hetero$tau, 2),
Expected  = round(expected_hetero, 2),
Bias      = round(out_hetero$tau - expected_hetero, 2),
LowerCB   = round(out_hetero$boot_out$cb_lower, 2),
UpperCB   = round(out_hetero$boot_out$cb_upper, 2)
)
print(head(res_hetero, 10))
cat("...\n")
cat("Homogeneity test p-value:", out_hetero$boot_out$p_value, "\n")
cat("(Should be < 0.05 since effect varies by quantile.)\n\n")
#---------------------------------------------------------------------------
# Quick Plots
#---------------------------------------------------------------------------
par(mfrow=c(1,2))
# Plot 1: Constant effect
plot(out_constant, main="Constant Treatment Effect (Frechet)",
col="blue", lwd=2)
abline(h=test_data$true_effect, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "True (2)"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
# Plot 2: Heterogeneous effect
plot(out_hetero, main="Heterogeneous Treatment Effect (Frechet)",
col="blue", lwd=2)
lines(q_grid, expected_hetero, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "Approx. True"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
par(mfrow=c(1,1))
devtools::load_all()
test_data <- create_test_data(n = 500)
# We want a 100-point grid
q_grid <- seq(0.1, 0.9, by=0.01)
# r3d with Frechet approach
out_constant <- r3d(
X        = test_data$x,
Y_list   = test_data$y_list,
cutoff   = 0,
method   = "frechet",
p        = 2,
s        = 1,
q_grid   = q_grid,
boot     = TRUE,
boot_reps= 500,
test     = "homogeneity"
)
# We know the true effect is exactly 2 at all quantiles:
expected_constant <- rep(test_data$true_effect, length(q_grid))
#---------------------------------------------------------------------------
# 2) HETEROGENEOUS-EFFECT DATA
#---------------------------------------------------------------------------
hetero_data <- create_hetero_effect_data(n = 500)
# We have the same q_grid = seq(0.01, 0.99, 0.01).
# We'll compare our estimate to hetero_data$true_effects, which is named for 0.01..0.99
out_hetero <- r3d(
X         = hetero_data$x,
Y_list    = hetero_data$y_list,
cutoff    = 0,
method    = "frechet",
p         = 2,
s         = 1,
q_grid    = q_grid,
boot      = TRUE,
boot_reps = 500,
test      = "homogeneity"
)
# Now for each q in q_grid, we'll see the difference we expect from the big replicate
# stored in hetero_data$true_effects (which is a named vector).
# If any exact matching fails because of floating float in names, we can do:
q_strs <- sprintf("%.2f", q_grid) # character
expected_hetero <- as.numeric(hetero_data$true_effects[q_strs])
#---------------------------------------------------------------------------
# Print results for manual checking
#---------------------------------------------------------------------------
cat("\n\n==== VISUAL VALIDATION ====\n\n")
# (A) Constant Effect
cat("CONSTANT EFFECT MODEL:\n")
cat("The effect is exactly:", test_data$true_effect, "for all q.\n\n")
res_const <- data.frame(
Quantile  = q_grid,
Estimated = round(out_constant$tau, 2),
Expected  = round(expected_constant, 2),
Bias      = round(out_constant$tau - expected_constant, 2),
LowerCB   = round(out_constant$boot_out$cb_lower, 2),
UpperCB   = round(out_constant$boot_out$cb_upper, 2)
)
print(head(res_const, 10))   # Print just the first few lines
cat("...\n")
cat("Homogeneity test p-value:", out_constant$boot_out$p_value, "\n")
cat("(Should be > 0.05 if effect is truly constant.)\n\n")
# (B) Heterogeneous Effect
cat("HETEROGENEOUS EFFECT MODEL:\n")
cat("(We used a big replicate to approximate these differences)\n\n")
res_hetero <- data.frame(
Quantile  = q_grid,
Estimated = round(out_hetero$tau, 2),
Expected  = round(expected_hetero, 2),
Bias      = round(out_hetero$tau - expected_hetero, 2),
LowerCB   = round(out_hetero$boot_out$cb_lower, 2),
UpperCB   = round(out_hetero$boot_out$cb_upper, 2)
)
print(head(res_hetero, 10))
cat("...\n")
cat("Homogeneity test p-value:", out_hetero$boot_out$p_value, "\n")
cat("(Should be < 0.05 since effect varies by quantile.)\n\n")
#---------------------------------------------------------------------------
# Quick Plots
#---------------------------------------------------------------------------
par(mfrow=c(1,2))
# Plot 1: Constant effect
plot(out_constant, main="Constant Treatment Effect (Frechet)",
col="blue", lwd=2)
abline(h=test_data$true_effect, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "True (2)"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
# Plot 2: Heterogeneous effect
plot(out_hetero, main="Heterogeneous Treatment Effect (Frechet)",
col="blue", lwd=2)
lines(q_grid, expected_hetero, col="red", lty=2, lwd=2)
legend("topright", c("Estimated", "Approx. True"),
col=c("blue", "red"), lty=c(1,2), lwd=2)
par(mfrow=c(1,1))
devtools::install()
test_data <- create_test_data(n = 500)
# We want a 100-point grid
q_grid <- seq(0.1, 0.9, by=0.01)
# r3d with Frechet approach
out_constant <- r3d(
X        = test_data$x,
Y_list   = test_data$y_list,
cutoff   = 0,
method   = "frechet",
p        = 2,
s        = 1,
q_grid   = q_grid,
boot     = TRUE,
boot_reps= 500,
test     = "homogeneity"
)
