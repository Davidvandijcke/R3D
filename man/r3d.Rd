% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r3d_main.R
\name{r3d}
\alias{r3d}
\title{Main Estimator for Distributional RD (R3D)}
\usage{
r3d(
  X,
  Y_list,
  T = NULL,
  cutoff = 0,
  method = c("simple", "frechet"),
  p = 2,
  q_grid = seq(0.01, 0.99, 0.01),
  fuzzy = FALSE,
  kernel_fun = c("epanechnikov", "triangular", "uniform"),
  s = 1,
  boot = FALSE,
  boot_reps = 200,
  boot_cores = 1,
  alpha = 0.05,
  test = c("none", "nullity", "homogeneity"),
  ...
)
}
\arguments{
\item{X}{Numeric vector of running variable values (length \eqn{n}).}

\item{Y_list}{A list of length \eqn{n}, where each element is a numeric vector
representing the sample from the outcome distribution of one unit.}

\item{T}{(Optional) For a fuzzy design: numeric or logical vector of length \eqn{n}
giving partial treatment status (0 or 1). If \code{fuzzy=FALSE}, this can be omitted.}

\item{cutoff}{Numeric scalar: the threshold for treatment assignment. The design
treats \eqn{X \ge cutoff} as above the cutoff.}

\item{method}{Either \code{"simple"} or \code{"frechet"}:
\describe{
\item{\code{"simple"}}{Local polynomial regression is done \emph{pointwise} for each quantile,
and then optionally rearranged to maintain monotonicity.}
\item{\code{"frechet"}}{A global local Fréchet regression approach is done, projecting
the entire curve onto quantile functions.}
}}

\item{p}{Integer specifying the local polynomial order (e.g., 2 for local quadratic).}

\item{q_grid}{Numeric vector of quantiles at which to estimate the distributional treatment effect.}

\item{fuzzy}{Logical flag for fuzzy design. Default \code{FALSE} for a sharp design.}

\item{kernel_fun}{Name of the kernel function. Possible choices are
\code{"epanechnikov"}, \code{"triangular"}, or \code{"uniform"}.
Defaults to \code{"triangular"}.}

\item{s}{Integer expansion order in the pilot local polynomial step used for bandwidth
selection. Defaults to 1.}

\item{boot}{Logical. If \code{TRUE}, automatically runs \code{\link{r3d_bootstrap}}
after estimation to produce uniform confidence bands and tests.}

\item{boot_reps}{Integer, number of bootstrap draws if \code{boot=TRUE}.}

\item{boot_cores}{Number of CPU cores for parallelizing the bootstrap. Default 1.}

\item{alpha}{Significance level for the uniform confidence bands. Default 0.05.}

\item{test}{Either \code{"none"}, \code{"nullity"}, or \code{"homogeneity"} (see \code{\link{r3d_bootstrap}}).}

\item{...}{Additional arguments passed to the bandwidth selection function \code{\link{r3d_bwselect}}.}
}
\value{
An S3 object of class \code{"r3d"}, containing (among others):
\describe{
\item{\code{tau}}{Estimated distributional treatment effect \eqn{\tau(q)} for each \eqn{q} in \code{q_grid}.}
\item{\code{q_grid}}{The quantile grid used.}
\item{\code{bandwidths}}{The MSE- or IMSE-optimal bandwidth(s).}
\item{\code{w_plus}, \code{w_minus}}{The internal local polynomial weights on the plus/minus side.}
\item{\code{e1_mat}, \code{e2_mat}}{Residual matrices used for the multiplier bootstrap.}
\item{\code{boot_out}}{If \code{boot=TRUE}, a list of bootstrap results from \code{\link{r3d_bootstrap}}.}
}
}
\description{
Fits a regression discontinuity design with \emph{distributional} outcomes (random distributions)
using local polynomial regression on quantiles (\code{method="simple"}) or local Fréchet regression
(\code{method="frechet"}). Supports both sharp and fuzzy designs.
}
\details{
This is the main user-facing function for the R3D approach. Internally, it:
\enumerate{
\item Selects bandwidth(s) via \code{\link{r3d_bwselect}},
\item Computes local polynomial fits on each side of the cutoff for each quantile in \code{q_grid},
\item For \code{method="frechet"}, performs a projection of the fitted quantile curves onto the
space of valid quantile functions (via isotonic regression),
\item (Optionally) runs the multiplier bootstrap for uniform inference.
}
}
\examples{
\dontrun{
  # Simulate data
  set.seed(123)
  n <- 100
  X <- runif(n, -1, 1)
  Y_list <- lapply(seq_len(n), function(i) {
    # Suppose distribution is Normal with mean depending on X
    rnorm(sample(30:50,1), mean=2 + 2*(X[i]>=0))
  })
  T <- as.numeric(X >= 0) * rbinom(n, 1, 0.8)  # Fuzzy treatment

  fit <- r3d(X, Y_list, T=T, cutoff=0,
             method="frechet", p=2, fuzzy=TRUE,
             boot=TRUE, boot_reps=200, alpha=0.05, test="nullity")

  # Inspect results
  print(fit)
  summary(fit)
  plot(fit)
}

}
\seealso{
\code{\link{r3d_bootstrap}}, \code{\link{plot.r3d}}, \code{\link{summary.r3d}}
}
